[{"path":"https://inbo.github.io/protocolhelper/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to protocolhelper","title":"Contributing to protocolhelper","text":"outlines propose change protocolhelper. detailed info contributing package, please see development contributing guide.","code":""},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to protocolhelper","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to protocolhelper","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to protocolhelper","text":"recommend create Git branch pull request (PR). use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s). use checklist check package passes quality checks. check errors, warnings notes working local branch, can proceed follows: Build package. Run x <- checklist::check_package(). Fix issues arise checks. Run x <- checklist::check_package() get problems found end checklist output. Commit push remaining changes.","code":""},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":"testing-a-function-from-the-package","dir":"","previous_headings":"","what":"Testing a function from the package","title":"Contributing to protocolhelper","text":"need test changes made existing function, can probably use one unit tests (folder ./tests/testthat). ’s possible unit test needs updated reflect changes made. contribute new function, also consider writing unit tests function (ask help process). test functions package often necessary create protocol empty project temporary directory. , can use following code:","code":"old_wd <- getwd()   on.exit(setwd(old_wd))   test_repo <- tempfile(\"test_protocol\")   dir.create(test_repo)   setwd(test_repo)   repo <- gert::git_init()   gert::git_config_set(name = \"user.name\", value = \"someone\")   gert::git_config_set(name = \"user.email\", value = \"someone@example.org\")    author_df <- data.frame(     stringsAsFactors = FALSE,     given = c(\"Hans\"),     family = c(\"Van Calster\"),     email = c(\"hans.vancalster@inbo.be\"),     orcid = c(\"0000-0001-8595-8426\"),     affiliation = c(\"Research Institute for Nature and Forest (INBO)\")   )   reviewer_df <- data.frame(     stringsAsFactors = FALSE,     given = c(\"Els\"),     family = c(\"Lommelen\"),     email = c(\"els.lommelen@inbo.be\"),     orcid = c(\"0000-0002-3481-5684\"),     affiliation = c(\"Research Institute for Nature and Forest (INBO)\")   )   file_manager_df <- data.frame(     stringsAsFactors = FALSE,     given = c(\"Pieter\"),     family = c(\"Verschelde\"),     email = c(\"pieter.verschelde@inbo.be\"),     orcid = c(\"0000-0002-9199-421X\"),     affiliation = c(\"Instituut voor Natuur- en Bosonderzoek (INBO)\")   )    local_mocked_bindings(     ask_yes_no = function(...) FALSE,     use_author = function(...) author_df,     use_reviewer = function(...) reviewer_df,     use_file_manager = function(...) file_manager_df,     readline = function(...) \"Een titel\"   )    # create a protocol in the temporary directory   version_number <- \"2020.01\"   create_sfp(     short_title = \"water 1\",     version_number = version_number, theme = \"water\", language = \"nl\"   )"},{"path":"https://inbo.github.io/protocolhelper/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to protocolhelper","text":"Please note protocolhelper project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://inbo.github.io/protocolhelper/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://inbo.github.io/protocolhelper/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with protocolhelper","title":"Getting help with protocolhelper","text":"Thanks using protocolhelper. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":"https://inbo.github.io/protocolhelper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hans Van Calster. Author, maintainer.            Research Institute Nature Forest (INBO) Thierry Onkelinx. Author.            Research Institute Nature Forest (INBO) Floris Vanderhaeghe. Author.            Research Institute Nature Forest (INBO) Els Lommelen. Contributor.            Research Institute Nature Forest (INBO) . Copyright holder, funder.","code":""},{"path":"https://inbo.github.io/protocolhelper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Van Calster, Hans; Onkelinx, Thierry; Vanderhaeghe, Floris (2025) protocolhelper: Helper Functions Manage Protocols. Version 0.8.1. https://inbo.github.io/protocolhelper/","code":"@Manual{,   title = {protocolhelper: Helper Functions to Manage Protocols. Version 0.8.1},   author = {Hans {Van Calster} and Thierry Onkelinx and Floris Vanderhaeghe},   year = {2025},   url = {https://inbo.github.io/protocolhelper/},   abstract = {Helper functions to manage INBO protocols.},   keywords = {protocols; R package; Reproducible research; Rmarkdown templates}, }"},{"path":"https://inbo.github.io/protocolhelper/index.html","id":"protocolhelper","dir":"","previous_headings":"","what":"Helper Functions to Manage Protocols","title":"Helper Functions to Manage Protocols","text":"goal protocolhelper provide helper functions templates manage INBO/protocolsource repository.","code":""},{"path":"https://inbo.github.io/protocolhelper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions to Manage Protocols","text":"can install protocolhelper :","code":"# Enable inbo r-universe options(repos = c(     inbo = 'https://inbo.r-universe.dev',     CRAN = 'https://cloud.r-project.org'))  # Install the package install.packages('protocolhelper')  # alternatively: install from github if (!requireNamespace(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"inbo/protocolhelper\")"},{"path":"https://inbo.github.io/protocolhelper/reference/add_captions.html","id":null,"dir":"Reference","previous_headings":"","what":"Touch up figure and table captions after using convert_docx_to_rmd() — add_captions","title":"Touch up figure and table captions after using convert_docx_to_rmd() — add_captions","text":"using convert_docx_to_rmd(), figure table captions part main text cross references just text numbers, making difficult integrate .Rmd files reports: automatically renumbered, captions listed,... function replaces figure table descriptions true captions, cross references figures tables dynamic references (refer figure table label).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_captions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Touch up figure and table captions after using convert_docx_to_rmd() — add_captions","text":"","code":"add_captions(   from,   to,   name_figure_from = \"Figuur\",   name_table_from = \"Tabel\",   name_figure_to = \"Figuur\",   name_table_to = \"Tabel\" )"},{"path":"https://inbo.github.io/protocolhelper/reference/add_captions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Touch up figure and table captions after using convert_docx_to_rmd() — add_captions","text":".Rmd file convert. Can given absolute relative path. filename write resulting .Rmd file. Can given absolute relative path. name_figure_from name given figures captions cross references .Rmd provided (default Figuur) name_table_from name given tables captions cross references .Rmd provided (default Tabel) name_figure_to name given figures cross references output .Rmd (default Figuur) name_table_to name given tables cross references output .Rmd (default Tabel)","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_captions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Touch up figure and table captions after using convert_docx_to_rmd() — add_captions","text":"function expects input generated convert_docx_to_rmd(), figure captions figure starting Figuur  (name defined variable name_figure), unique number finally description one paragraph table captions table starting Tabel  (name defined variable name_table), unique number finally description one paragraph figures consisting one image, 2 figures near cross references label figure table refer , default Figuur  Tabel  followed unique number written exactly way Please check carefully mistakes using function","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/add_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds dependencies to the YAML of an index.Rmd file — add_dependencies","title":"Adds dependencies to the YAML of an index.Rmd file — add_dependencies","text":"Adds dependencies YAML index.Rmd file","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds dependencies to the YAML of an index.Rmd file — add_dependencies","text":"","code":"add_dependencies(   code_mainprotocol,   protocol_code,   version_number,   params,   appendix = !is.na(params) )"},{"path":"https://inbo.github.io/protocolhelper/reference/add_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds dependencies to the YAML of an index.Rmd file — add_dependencies","text":"code_mainprotocol Protocol code protocol dependencies need declared YAML index.Rmd file protocol_code Character vector protocol codes dependencies main protocol. version_number Character vector version numbers corresponding protocol_code. params List lists protocol-specific parameters corresponding parameters protocols protocol_code. Use NA parameters set protocol. appendix Logical vector indicating whether dependency needs included subprotocol (end main protocol appendix). Default !.na(params). params NA, appendix always set TRUE even user passes another value.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/add_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds dependencies to the YAML of an index.Rmd file — add_dependencies","text":"","code":"if (FALSE) { # \\dontrun{ protocolhelper::add_dependencies(   code_mainprotocol = \"spp-999-en\",   protocol_code = c(\"sfp-123-en\", \"spp-124-en\"),   version_number = c(\"2020.01\", \"2020.02\"),   params = list(NA, list(width = 8, height = 8)) ) } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/add_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create labelled captions for pander tables — add_label","title":"Helper function to create labelled captions for pander tables — add_label","text":"function adds reference label caption pander tables can cross-referenced bookdown using \\@ref(tab:label) syntax. function used pander(x, caption = add_label()).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create labelled captions for pander tables — add_label","text":"","code":"add_label(caption = \"\", tag = \"tab\")"},{"path":"https://inbo.github.io/protocolhelper/reference/add_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create labelled captions for pander tables — add_label","text":"caption caption text string tag tag use prefix. Default tab.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to create labelled captions for pander tables — add_label","text":"caption text prefixed reference label.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/add_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to create labelled captions for pander tables — add_label","text":"","code":"add_label(\"caption text\") #> [1] \"(\\\\#tab:)caption text\""},{"path":"https://inbo.github.io/protocolhelper/reference/add_one_subprotocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to add one sub-protocol to a project-specific protocol of which it is a dependency — add_one_subprotocol","title":"Helper function to add one sub-protocol to a project-specific protocol of which it is a dependency — add_one_subprotocol","text":"function renders sub-protocol bookdown::markdown_document2() saves resulting md file (associated media data files) subfolder directory project-specific protocol. function normally called directly. Use add_subprotocols() instead.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_one_subprotocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to add one sub-protocol to a project-specific protocol of which it is a dependency — add_one_subprotocol","text":"","code":"add_one_subprotocol(   code_subprotocol,   version_number,   params2 = NULL,   code_mainprotocol,   fetch_remote = TRUE )"},{"path":"https://inbo.github.io/protocolhelper/reference/add_one_subprotocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to add one sub-protocol to a project-specific protocol of which it is a dependency — add_one_subprotocol","text":"code_subprotocol Character string giving protocol code sub-protocol made (usually sfp-type protocol) version_number Character string format YYYY.NN params2 list parameter key-value pairs. code_mainprotocol Character string giving protocol code main protocol fetch_remote Whether fetch remote. Default TRUE.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/add_one_subprotocol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to add one sub-protocol to a project-specific protocol of which it is a dependency — add_one_subprotocol","text":"","code":"if (FALSE) { # \\dontrun{ add_subprotocols(code_mainprotocol = \"spp-999-en\") } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/add_subprotocols.html","id":null,"dir":"Reference","previous_headings":"","what":"Render all sub-protocols belonging to a main protocol to single markdown files — add_subprotocols","title":"Render all sub-protocols belonging to a main protocol to single markdown files — add_subprotocols","text":"function called interactively (console) dependencies section YAML header index.Rmd file main protocol filled aid protocolhelper::add_dependencies() function. reproducibility, good practice save call separate R script. sub-protocol single markdown file associated media data files written. sub-protocol written subfolder main protocol. subfolder name version number sub-protocol.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/add_subprotocols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render all sub-protocols belonging to a main protocol to single markdown files — add_subprotocols","text":"","code":"add_subprotocols(code_mainprotocol, fetch_remote = TRUE)"},{"path":"https://inbo.github.io/protocolhelper/reference/add_subprotocols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render all sub-protocols belonging to a main protocol to single markdown files — add_subprotocols","text":"code_mainprotocol Character string giving protocol code main protocol fetch_remote Whether fetch remote. Default TRUE.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/check_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Check protocol frontmatter and structure — check_all","title":"Check protocol frontmatter and structure — check_all","text":"Combines check_frontmatter() check_structure() one function.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check protocol frontmatter and structure — check_all","text":"","code":"check_all(protocol_code, fail = !interactive())"},{"path":"https://inbo.github.io/protocolhelper/reference/check_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check protocol frontmatter and structure — check_all","text":"protocol_code Character string giving protocol code fail function drop error case problem? Defaults TRUE non-interactive session FALSE interactive session.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check protocol frontmatter and structure — check_all","text":"report failed checks.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/check_all_person_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check if person information is correct — check_all_person_info","title":"Helper function to check if person information is correct — check_all_person_info","text":"Checks format person names orcid ids.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_all_person_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check if person information is correct — check_all_person_info","text":"","code":"check_all_person_info(person_list, problems_vect)"},{"path":"https://inbo.github.io/protocolhelper/reference/check_all_person_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check if person information is correct — check_all_person_info","text":"person_list yaml front matter part containing person info problems_vect character vector previously encountered problems","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_all_person_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check if person information is correct — check_all_person_info","text":"character vector previously encountered problems problems identified person names orcid ids.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/check_frontmatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks protocol metadata — check_frontmatter","title":"Checks protocol metadata — check_frontmatter","text":"function reads metadata yaml front matter stored index.Rmd file protocol checks metadata format correct. function intended checking protocol ready rendered published (instance, fail version number YYYY.NN.dev).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_frontmatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks protocol metadata — check_frontmatter","text":"","code":"check_frontmatter(protocol_code, fail = !interactive())"},{"path":"https://inbo.github.io/protocolhelper/reference/check_frontmatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks protocol metadata — check_frontmatter","text":"protocol_code Character string giving protocol code fail function drop error case problem? Defaults TRUE non-interactive session FALSE interactive session.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_frontmatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks protocol metadata — check_frontmatter","text":"report failed checks.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/check_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks protocol document structure — check_structure","title":"Checks protocol document structure — check_structure","text":"function reads protocol checks document structure correct: chunks head tail, required headings present right order,... function intended checking protocol ready rendered published.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks protocol document structure — check_structure","text":"","code":"check_structure(protocol_code, fail = !interactive())"},{"path":"https://inbo.github.io/protocolhelper/reference/check_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks protocol document structure — check_structure","text":"protocol_code Character string giving protocol code fail function drop error case problem? Defaults TRUE non-interactive session FALSE interactive session.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/check_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks protocol document structure — check_structure","text":"report failed checks.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/convert_docx_to_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a docx-file (a protocol) to an (R)markdown file — convert_docx_to_rmd","title":"Convert a docx-file (a protocol) to an (R)markdown file — convert_docx_to_rmd","text":"function derived redoc::dedoc() function uses pandoc convert docx markdown. Several options preset end-markdown document syntax close possible Rmarkdown files RStudio. conversion, graphics (e.g. png, jpg) extracted docx archive placed folder ./media named image1, image2, etcetera. Additionally, .emf files converted .png.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/convert_docx_to_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a docx-file (a protocol) to an (R)markdown file — convert_docx_to_rmd","text":"","code":"convert_docx_to_rmd(   from,   to = sub(\"docx$\", \"Rmd\", from),   dir_media = \".\",   wrap = NA,   overwrite = FALSE,   verbose = FALSE,   wd = getwd() )"},{"path":"https://inbo.github.io/protocolhelper/reference/convert_docx_to_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a docx-file (a protocol) to an (R)markdown file — convert_docx_to_rmd","text":".docx file convert. Can given absolute relative path. filename including path write resulting .Rmd file. default use name path .docx document. dir_media directory write folder media images , relative folder .Rmd written. Defaults '.' (path .Rmd file written). wrap width wrap text. NA (default), text wrapped. overwrite Whether overwrite file already existed. Defaults FALSE. verbose Whether print pandoc progress text. Defaults FALSE. wd Current working directory (used handle relative paths).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/convert_docx_to_rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a docx-file (a protocol) to an (R)markdown file — convert_docx_to_rmd","text":"Metadata page headers footers docx ignored thus lost conversion. case header footer contain important metadata, need recovered manually. Usually header information go inside yaml section Rmarkdown.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/create_from_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Rmarkdown version from an existing docx protocol — create_from_docx","title":"Create an Rmarkdown version from an existing docx protocol — create_from_docx","text":"docx file first converted single Rmd file aid pandoc (called convert_docx_to_rmd). emf images converted png. Next, file split chapter multiple Rmd files. graphics files stored ./media folder. Bookdown compatible captions cross-references Figures Tables added 'Figuur' 'Tabel' used original document.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_from_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Rmarkdown version from an existing docx protocol — create_from_docx","text":"","code":"create_from_docx(from_docx, path_to_protocol)"},{"path":"https://inbo.github.io/protocolhelper/reference/create_from_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Rmarkdown version from an existing docx protocol — create_from_docx","text":"from_docx character string path (absolute relative) .docx file containing pre-existing protocol. path_to_protocol Absolute path protocol folder protocol created docx needs written ","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","title":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","text":"function create new folder based values passed via parameters creates R-markdown (bookdown) skeleton based template file start working new protocol. function (partly) interactive ask title, optional subtitle, authors, reviewers, file manager keywords. metadata (YAML section index.Rmd file) filled automatically. metadata still need passed arguments function. See examples section. Optionally, rmarkdown chapters rendered html file saved matching subfolder docs folder.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","text":"","code":"create_protocol(   protocol_type = c(\"sfp\", \"spp\", \"sap\", \"sop\", \"sip\"),   short_title,   version_number = get_version_number(),   theme = NULL,   project_name = NULL,   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = protocol_type,   render = FALSE )  create_sfp(   short_title,   version_number = get_version_number(),   theme = c(\"generic\", \"water\", \"air\", \"soil\", \"vegetation\", \"species\"),   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = c(\"sfp\", \"generic\"),   render = FALSE )  create_spp(   short_title,   version_number = get_version_number(),   project_name,   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = c(\"spp\"),   render = FALSE )  create_sap(   short_title,   version_number = get_version_number(),   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = c(\"sap\", \"generic\"),   render = FALSE )  create_sip(   short_title,   version_number = get_version_number(),   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = c(\"sip\", \"generic\"),   render = FALSE )  create_sop(   short_title,   version_number = get_version_number(),   language = c(\"nl\", \"en\"),   from_docx = NULL,   protocol_number = NULL,   template = c(\"sop\", \"generic\"),   render = FALSE )"},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","text":"protocol_type Either sfp (standard field protocol), spp ( standard project protocol), sap (standard analytical protocol), sip ( standard instrument protocol), sop (standard operating protocol) short_title character string less 20 characters use folder file names version_number version number form YYYY.##. default function determine number automatically. normally changed. theme character string equal one \"generic\" (default), \"water\", \"air\", \"soil\", \"vegetation\" \"species\". used folder location (source/sfp/theme) standard field protocols belong theme stored. Ignored protocol_type \"sfp\". project_name character string used folder location (source/spp/project_name) project-specific protocols belong project stored. Preferably short name acronym. folder exist, created. Ignored protocol_type \"spp\". language Language protocol, either \"nl\" (Dutch), default, \"en\" (English). from_docx character string path (absolute relative) .docx file containing pre-existing protocol. Please make sure copy-paste relevant meta-data .docx file corresponding parameters function. nothing provided (.e. default = NULL), empty template used. protocol_number character string giving protocol number. parameter normally specified (.e. NULL), unless from_docx specified. protocol number three digit string first digit corresponds theme last two digits identify protocol within theme standard field protocols. protocol number protocol types just three digit string. NULL (default), protocol number determined automatically based pre-existing protocol numbers. Note backwards compatibility protocol numbers already use INBO, made list reserved numbers. reserved numbers used protocol_number NULL. time need explicitly pass protocol number protocol_number argument want migrate pre-existing INBO protocol protocolsource hence use one reserved numbers. Protocol numbers already use protocolsource can retrieved get_protocolnumbers(). template template use? Default set equal protocol_type. However, can also set \"generic\" case simplified template used can used alternative default templates. render Whether render protocol html. Defaults FALSE.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","text":"assumed source folder subfolder RStudio project git version control. target folder files written created subdirectories beneath source. subfolder structure form /sfp/<theme>/<sfp>_<protocolnumber>_<language>_<short_title>/ standard field protocols. /spp/<project_name>/<spp>_<protocolnumber>_<language>_<short_title>/ standard project protocols. /sip/<sip>_<protocolnumber>_<language>_<short_title>/ sips (analogous sop sap). folder names determined corresponding arguments function. matching subfolder structure created beneath docs folder (output files needed rendering html output placed render = TRUE. template Rmarkdown files Rmarkdown files result converting docx protocol (see from_docx argument), written target folder beneath source. Template Rmarkdown files name Rmarkdown files result converting docx protocol overwritten latter. Besides Rmarkdown files, target folder also contain files needed render Bookdown gitbook _bookdown.yml _output.yml. NEWS.md file must used document changes revisions protocol. Furthermore, data media folder created subdirectories target folder. media folder can used store image files contain image files extracted docx protocol from_docx argument used. data folder can used store tabular data needed protocol.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a folder with a bookdown (R markdown) template to start a new protocol and optionally render to html — create_protocol","text":"","code":"if (FALSE) { # \\dontrun{ protocolhelper::create_protocol(   protocol_type = \"sfp\",   short_title = \"water 1\",   theme = \"water\", language = \"en\" ) } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Create protocol code from it's components — create_protocol_code","title":"Create protocol code from it's components — create_protocol_code","text":"protocol code format s[fpioa]p-###-[nl|en] created. number determined automatically based theme (case sfp) rank order existing reserved protocol numbers, unless protocol number passed directly protocol_number argument.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create protocol code from it's components — create_protocol_code","text":"","code":"create_protocol_code(protocol_type, theme, protocol_number, language)"},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create protocol code from it's components — create_protocol_code","text":"protocol_type Either sfp (standard field protocol), spp ( standard project protocol), sap (standard analytical protocol), sip ( standard instrument protocol), sop (standard operating protocol) theme character string equal one \"generic\" (default), \"water\", \"air\", \"soil\", \"vegetation\" \"species\". used folder location (source/sfp/theme) standard field protocols belong theme stored. Ignored protocol_type \"sfp\". protocol_number character string giving protocol number. parameter normally specified (.e. NULL), unless from_docx specified. protocol number three digit string first digit corresponds theme last two digits identify protocol within theme standard field protocols. protocol number protocol types just three digit string. NULL (default), protocol number determined automatically based pre-existing protocol numbers. Note backwards compatibility protocol numbers already use INBO, made list reserved numbers. reserved numbers used protocol_number NULL. time need explicitly pass protocol number protocol_number argument want migrate pre-existing INBO protocol protocolsource hence use one reserved numbers. Protocol numbers already use protocolsource can retrieved get_protocolnumbers(). language Language protocol, either \"nl\" (Dutch), default, \"en\" (English).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/create_protocol_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create protocol code from it's components — create_protocol_code","text":"character string containing protocol_code","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_path_to_protocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to get (or set) the full path to a protocol — get_path_to_protocol","title":"Function to get (or set) the full path to a protocol — get_path_to_protocol","text":"function used functions normally used directly. existing protocol codes, arguments theme project_name always ignored. function return absolute path protocol. new sfp spp protocols, also either theme project_name argument short_title required apart protocol_code. function construct absolute path source code new protocol written.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_path_to_protocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to get (or set) the full path to a protocol — get_path_to_protocol","text":"","code":"get_path_to_protocol(   protocol_code,   theme = NULL,   project_name = NULL,   short_title = NULL )"},{"path":"https://inbo.github.io/protocolhelper/reference/get_path_to_protocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to get (or set) the full path to a protocol — get_path_to_protocol","text":"protocol_code Character string giving protocol code theme character string equal one \"generic\", \"water\", \"air\", \"soil\", \"vegetation\" \"species\". Defaults NULL. needed folder name protocol code exists request sfp protocol. project_name Character string giving name project folder. Defaults NULL. needed folder name protocol code exists request spp protocol. short_title character string less 20 characters use folder filenames. Defaults NULL. needed folder name protocol code exists.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_path_to_protocol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to get (or set) the full path to a protocol — get_path_to_protocol","text":"character vector containing full path protocol.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/get_path_to_protocol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to get (or set) the full path to a protocol — get_path_to_protocol","text":"","code":"if (FALSE) { # \\dontrun{ get_path_to_protocol(protocol_code = \"sfp-401-nl\") } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocol_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get protocol type from protocol code — get_protocol_type","title":"Get protocol type from protocol code — get_protocol_type","text":"protocol type corresponds first 3 letters protocol code","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocol_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get protocol type from protocol code — get_protocol_type","text":"","code":"get_protocol_type(protocol_code, labels = TRUE, auto_identifier = FALSE)"},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocol_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get protocol type from protocol code — get_protocol_type","text":"protocol_code Character vector giving protocol code(s) labels Logical. TRUE return full labels, else return just three letter abbreviation. auto_identifier Logical. TRUE returns labels following Pandoc's auto-identifier rules.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocol_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get protocol type from protocol code — get_protocol_type","text":"factor 5 levels corresponding sfp, sip, sap, sop spp. labels depend auto_identifier setting.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocolnumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to list all occupied protocol numbers — get_protocolnumbers","title":"Function to list all occupied protocol numbers — get_protocolnumbers","text":"function search protocol numbers filenames Rmarkdown files listed underneath source folder. search restricted files given protocol type given language.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocolnumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to list all occupied protocol numbers — get_protocolnumbers","text":"","code":"get_protocolnumbers(   protocol_type = c(\"sfp\", \"sip\", \"sap\", \"sop\", \"spp\"),   language = c(\"nl\", \"en\") )"},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocolnumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to list all occupied protocol numbers — get_protocolnumbers","text":"protocol_type character string equal sfp (default), sip, sap, sop spp. language Language protocol, either \"nl\" (Dutch), default, \"en\" (English).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocolnumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to list all occupied protocol numbers — get_protocolnumbers","text":"character vector occupied protocol numbers specific protocol type","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/get_protocolnumbers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to list all occupied protocol numbers — get_protocolnumbers","text":"","code":"if (FALSE) { # \\dontrun{ get_protocolnumbers() } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/get_short_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to list all short titles that are already in use. — get_short_titles","title":"Function to list all short titles that are already in use. — get_short_titles","text":"function search short titles filenames Rmarkdown files listed underneath source folder. search restricted files given protocol type given language.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_short_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to list all short titles that are already in use. — get_short_titles","text":"","code":"get_short_titles(   protocol_type = c(\"sfp\", \"sip\", \"sap\", \"sop\", \"spp\"),   language = c(\"nl\", \"en\") )"},{"path":"https://inbo.github.io/protocolhelper/reference/get_short_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to list all short titles that are already in use. — get_short_titles","text":"protocol_type character string equal sfp (default), sip, sap, sop spp. language Language protocol, either \"nl\" (Dutch), default, \"en\" (English).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_short_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to list all short titles that are already in use. — get_short_titles","text":"character vector short titles use given protocol type.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/get_short_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to list all short titles that are already in use. — get_short_titles","text":"","code":"if (FALSE) { # \\dontrun{ get_short_titles() } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/get_version_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Get version number for a protocol — get_version_number","title":"Get version number for a protocol — get_version_number","text":"Looks pre-existing version numbers protocols main branch calculates incremented (next) version number currently checkout branch containing created/development/updated/ready released protocol. local main branch needs date (aligned remote) . case, issues detected regarding non-clean local git repository - informative error messages given.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_version_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get version number for a protocol — get_version_number","text":"","code":"get_version_number(path = \".\")"},{"path":"https://inbo.github.io/protocolhelper/reference/get_version_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get version number for a protocol — get_version_number","text":"path Defaults current working directory. correspond root directory protocolsource repo.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/get_version_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get version number for a protocol — get_version_number","text":"string containing next (incremented) version number","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/increment_version_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Increment version number — increment_version_number","title":"Increment version number — increment_version_number","text":"Given set published protocol version numbers, calculate next version number","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/increment_version_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increment version number — increment_version_number","text":"","code":"increment_version_number(versions)"},{"path":"https://inbo.github.io/protocolhelper/reference/increment_version_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increment version number — increment_version_number","text":"versions character vector previously published version numbers","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/increment_version_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increment version number — increment_version_number","text":"string containing next (incremented) version number","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/insert_protocolsection.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","title":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","text":"idea execute function R chunk knitr option results=\"asis\".","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/insert_protocolsection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","text":"","code":"insert_protocolsection(   code_subprotocol,   version_number,   file_name,   section = NULL,   demote_header = c(0, 1, 2, -1),   fetch_remote = TRUE )"},{"path":"https://inbo.github.io/protocolhelper/reference/insert_protocolsection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","text":"code_subprotocol Character string giving protocol code sub-protocol made (usually sfp-type protocol) version_number Character string format YYYY.NN file_name Character string name Rmarkdown file (chapter starting level 1 heading). section Optional character string name section within Rmarkdown file. Can also unique substring section title. specified (default): whole file taken. assumed section level 2 heading. demote_header Number '#' prefix titles inserting current protocol. Default 0. negative value can used remove '#' section titles. Allowed values visible usage section. fetch_remote Whether fetch remote. Default TRUE.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/insert_protocolsection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","text":"function return Rmarkdown","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/insert_protocolsection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to add a chapter or a section of a published protocol for re-use in another protocol — insert_protocolsection","text":"","code":"if (FALSE) { # \\dontrun{ insert_protocolsection(   code_subprotocol = \"sfp-401-nl\",   version_number = \"2021.01\",   file_name = \"07_stappenplan.Rmd\" ) } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"The protocolcheck R6 class — protocolcheck","title":"The protocolcheck R6 class — protocolcheck","text":"class collects shows check results.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The protocolcheck R6 class — protocolcheck","text":"protocol_code Character string giving protocol code. path Character string giving relative path protocol. error Character vector containing errors found protocol","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The protocolcheck R6 class — protocolcheck","text":"protocolcheck$new() protocolcheck$add_error() protocolcheck$check() protocolcheck$clone()","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The protocolcheck R6 class — protocolcheck","text":"Create new Protocolcheck object.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The protocolcheck R6 class — protocolcheck","text":"","code":"protocolcheck$new(protocol_code)"},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The protocolcheck R6 class — protocolcheck","text":"protocol_code Character string giving protocol code.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The protocolcheck R6 class — protocolcheck","text":"new Protocolcheck object","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"method-add-error-","dir":"Reference","previous_headings":"","what":"Method add_error()","title":"The protocolcheck R6 class — protocolcheck","text":"Add new error Protocolcheck object.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The protocolcheck R6 class — protocolcheck","text":"","code":"protocolcheck$add_error(msg)"},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The protocolcheck R6 class — protocolcheck","text":"msg Error message added.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"method-check-","dir":"Reference","previous_headings":"","what":"Method check()","title":"The protocolcheck R6 class — protocolcheck","text":"Give error report Protocolcheck object.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The protocolcheck R6 class — protocolcheck","text":"","code":"protocolcheck$check(fail)"},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The protocolcheck R6 class — protocolcheck","text":"fail error dropped report contains errors?","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The protocolcheck R6 class — protocolcheck","text":"error report (desired error dropped).","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The protocolcheck R6 class — protocolcheck","text":"objects class cloneable method.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The protocolcheck R6 class — protocolcheck","text":"","code":"protocolcheck$clone(deep = FALSE)"},{"path":"https://inbo.github.io/protocolhelper/reference/protocolcheck.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The protocolcheck R6 class — protocolcheck","text":"deep Whether make deep clone.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/render_protocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to render a protocol to html and pdf. — render_protocol","title":"Function to render a protocol to html and pdf. — render_protocol","text":"function simple wrapper around bookdown::render_book() can used render protocol html pdf order preview updates made.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/render_protocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to render a protocol to html and pdf. — render_protocol","text":"","code":"render_protocol(protocol_code = NULL, output_dir = NULL, ...)"},{"path":"https://inbo.github.io/protocolhelper/reference/render_protocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to render a protocol to html and pdf. — render_protocol","text":"protocol_code Character string giving protocol code output_dir output directory. NULL, field named output_dir configuration file _bookdown.yml used (possibly specified, either, case directory name _book used). ... additional parameters passed bookdown::render_book()","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/render_protocol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to render a protocol to html and pdf. — render_protocol","text":"rendered html pdf file associated files needed html file put directory implied output_dir parameter.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/render_protocol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to render a protocol to html and pdf. — render_protocol","text":"","code":"if (FALSE) { # \\dontrun{ render_protocol(protocol_code = \"sfp_401-nl\") } # }"},{"path":"https://inbo.github.io/protocolhelper/reference/update_protocol.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparatory steps to start the update of a pre-existing version of a protocol — update_protocol","title":"Preparatory steps to start the update of a pre-existing version of a protocol — update_protocol","text":"function creates branch name protocol_code checks branch. Next, update version number YAML index.Rmd update protocol-specific NEWS.md file.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/update_protocol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparatory steps to start the update of a pre-existing version of a protocol — update_protocol","text":"","code":"update_protocol(protocol_code)"},{"path":"https://inbo.github.io/protocolhelper/reference/update_protocol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparatory steps to start the update of a pre-existing version of a protocol — update_protocol","text":"protocol_code Character string giving protocol code","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/update_protocol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparatory steps to start the update of a pre-existing version of a protocol — update_protocol","text":"NULL invisibly","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/update_version_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the version number in the YAML section of a protocol index.Rmd file and optionally in protocol NEWS.md — update_version_number","title":"Updates the version number in the YAML section of a protocol index.Rmd file and optionally in protocol NEWS.md — update_version_number","text":"Makes use get_version_number get new version number changes accordingly YAML section index.Rmd file optionally NEWS.md.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/update_version_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the version number in the YAML section of a protocol index.Rmd file and optionally in protocol NEWS.md — update_version_number","text":"","code":"update_version_number(   protocol_code,   commit = TRUE,   update_news = TRUE,   path = \".\" )"},{"path":"https://inbo.github.io/protocolhelper/reference/update_version_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates the version number in the YAML section of a protocol index.Rmd file and optionally in protocol NEWS.md — update_version_number","text":"protocol_code protocol_code corresponding name branch contains new updated protocol. commit Logical. Default TRUE. Whether add commit changes protocol branch update_news Logical. Default TRUE. Whether find replace old version number new version number NEWS.md heading 2. path Default current working directory. correspond root directory protocolsource repo.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/update_version_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates the version number in the YAML section of a protocol index.Rmd file and optionally in protocol NEWS.md — update_version_number","text":"TRUE version number yaml updated. FALSE otherwise.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/validate_orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"validate an ORCID string — validate_orcid","title":"validate an ORCID string — validate_orcid","text":"Generates check digit per ISO 7064 11,2. last character ORCID ID checksum. accordance ISO/IEC 7064:2003, MOD 11-2, checksum must \"0-9\" \"X\", capital letter X represents value 10.","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/validate_orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate an ORCID string — validate_orcid","text":"","code":"validate_orcid(orcid)"},{"path":"https://inbo.github.io/protocolhelper/reference/validate_orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate an ORCID string — validate_orcid","text":"orcid orcid 0000-0000-0000-0000 format","code":""},{"path":"https://inbo.github.io/protocolhelper/reference/validate_orcid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate an ORCID string — validate_orcid","text":"Logical. TRUE check digit correct.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/reference/validate_orcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"validate an ORCID string — validate_orcid","text":"","code":"validate_orcid(\"0000-0002-6378-6229\") #> [1] TRUE"},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fix-0-8-1","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"protocolhelper 0.8.1","text":"protocolhelper:::update_doi() longer removes DOI published","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.8.0","text":"protocol published protocol-specific Zenodo archive (#112). protocol-specific Zenodo DOI automatically added protocol metadata (YAML section Index.Rmd file) visible rendered versions.","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.8.0","text":"Fixed rendering authors PDF version.","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"enhancements-0-7-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"protocolhelper 0.7.0","text":"create_protocol now works interactively (#117) make use checklist::use_author() author, reviewer file_manager fields YAML.","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"breaking-change-0-7-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"protocolhelper 0.7.0","text":"author, reviewer file_manager YAML fields now different format","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.6.1","text":"Overwriting placeholder headers resulted false alarm check_structure (issue #124)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"enhancements-0-6-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"protocolhelper 0.6.1","text":"Added appendix chapters spp templates (issue #121)","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.6.0","text":"Updates needed LaTeX template comply pandoc 3.1.8+ (issue #122)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"enhancements-0-6-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"protocolhelper 0.6.0","text":"internal reserved codes list augmented codes genetics lab improved error messages create_protocol()","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"enhancements-0-5-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"protocolhelper 0.5.1","text":"removed html comments templates beneath part headers, causes layout issues rendering automatically update version numbers protocol-specific NEWS.md files","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.5.0","text":"new function add_label use caption argument pander tables","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"enhancements-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"protocolhelper 0.5.0","text":"better handle pre-existing protocol numbers","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-13","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.13","text":"internal function render_release() now also writes .zenodo.json file protocol authors now added contributors instead creators .zenodo.json file","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-12","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.12","text":"switched theme number air soil protocols","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-11","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.11","text":"removed unneeded docker file improved layout website overview tables","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-10","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.10","text":"improved code generate metadata templates","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-4-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.4.9","text":"fixed bug protocol code check check_frontmatter()","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-8","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.8","text":"various improvements website homepage, including Dutch English version","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-4-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.4.8","text":"fixed bug passing metadata pandoc","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-7","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.7","text":"removed _bookdown.yml template files now created programmatically website contains NEWS page protocol now home button return protocols website homepage","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-4-7","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.4.7","text":"fixes problem caused references appear twice bibliography case subprotocols","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-4-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.4.6","text":"fixes problem check_structure subprotocol present","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.5","text":"new function check_all combines frontmatter structure checks","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-4-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.4.5","text":"fixes problem ´add_one_subprotocol()´ correct path media data used fixes problem bibliography field subprotocol added fixes problem figure table cross-references case subprotocol","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.4","text":"fixes problem checking dates improve error message URL NEWS.md incorrect","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.3","text":"(R)md template files rewritten canonical (pandoc) markdown format fix check code chunks failed html blocks","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.2","text":"better error handling check_structure check_frontmatter","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.1","text":"fixed bug occurred check_structure check_frontmatter ran protocols based generic template template gains template_name metadata field added pandoc minimal system requirements description template now path_to_protocol R object defined resolves full path protocol","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"breaking changes","title":"protocolhelper 0.4.0","text":"reworked folder structure (src becomes source, thematic becomes sfp, project becomes spp) #82","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.4.0","text":"added generic template can used alternative sfp, sip, sap sop templates #78 changed create_protocol handle sap, sip, sop generic templates handle reserved (use) protocol codes lab field work inventory lists migrated protocolsource","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.4.0","text":"reworked internal function protocolhelper:::render_release improve homepage website #84 fixed numerous spelling issues","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-032","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.3.2","title":"protocolhelper 0.3.2","text":"patch update checklist machinery","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.3.1","text":"update_version_number commits modified Index.Rmd get_version_number temporarily stashes changes don’t get lost switching branches","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.3.0","text":"templates now also references.yaml file corresponding bibliography fields yaml front matter added templates standard analysis procedures (sap) added templates standard instrument procedures (sip) added templates standard operating procedures (sop) added function check_structure() check document structure protocols added function get_version_number() determine version number","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.3.0","text":"various fixes comply new version checklist package improved checks passing authors orcids create_protocol() template markdown files chapter titles changed file name chapter title similar functions clean_git new_branch now imported checklist package","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.3.0","text":"fix problem backslashes path media files converting docx markdown","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-023","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.2.3","title":"protocolhelper 0.2.3","text":"fix problem github action workflow (install recent version pandoc)","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.2.2","text":"function update protocol (start development new version) internal function get protocol tags optionally bump development version number (#27) internal function update .zenodo.json file (add new authors) (#25)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.2.2","text":"fixed relative links template NEWS.md html comments removed function render_all(); superseded internal function protocolhelper:::render_release(). function internal used administrators part workflow publish new protocol update existing protocol. exported function protocolhelper::render_protocol() can used render individual protocol.","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.2.2","text":"fixed bugs check_frontmatter() due changes way YAML metadata stored","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.2.1","text":"protocol templates include CC-license","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"minor-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"protocolhelper 0.2.1","text":"arguments determining paths save results convert_docx_to_rmd() reconsidered (#52 #53) change default argument wrap convert_docx_to_rmd() NA .emf files converted .png convert_docx_to_rmd()","code":""},{"path":[]},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"protocolhelper 0.2.0","text":"restructured yaml skeleton.Rmd templates: moved metadata params section top level yaml new YAML syntax add dependencies params section YAML","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"protocolhelper 0.2.0","text":"adds orcid information (#32) adds link dependencies table params missing (#46) adds new function aid adding dependencies YAML header adds logo sidebar (#44)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"protocolhelper 0.2.0","text":"remove unnecessary failing check check different OS (#49)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-015","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.5","title":"protocolhelper 0.1.5","text":"adds function add_captions()","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-014","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.4","title":"protocolhelper 0.1.4","text":"fixes bug introduced 0.1.3","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-013","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.3","title":"protocolhelper 0.1.3","text":"protocol created existing docx version, template files generated well (overwritten docx chapter filename , .e. confirms current template standards)","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-012","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.2","title":"protocolhelper 0.1.2","text":"removed redundant pkgdown workflow","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-011","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.1","title":"protocolhelper 0.1.1","text":"Added NEWS.md file track changes package. Minor code improvements meet quality criteria checklist::check_package()","code":""},{"path":"https://inbo.github.io/protocolhelper/news/index.html","id":"protocolhelper-010","dir":"Changelog","previous_headings":"","what":"protocolhelper 0.1.0","title":"protocolhelper 0.1.0","text":"Added new function add_subprotocols()","code":""}]
